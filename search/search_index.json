{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"taskcat \u00b6 What is taskcat? \u00b6 taskcat is a tool that tests AWS CloudFormation templates. It deploys your AWS CloudFormation template in multiple AWS Regions and generates a report with a pass/fail grade for each region. You can specify the regions and number of Availability Zones you want to include in the test, and pass in parameter values from your AWS CloudFormation template. taskcat is implemented as a Python class that you import, instantiate, and run. taskcat was developed by the AWS QuickStart team to test AWS CloudFormation templates that automatically deploy workloads on AWS. We\u2019re pleased to make the tool available to all developers who want to validate their custom AWS CloudFormation templates across AWS Regions Support \u00b6 Installing taskcat \u00b6 taskcat install via pip Python Requirements: \u00b6 Installing via pip3 \u00b6 pip3 install taskcat Installing via pip3 --user \u00b6 (for those who want to install taskcat into their homedir) pip3 install taskcat --user Note: (the user install dir is platform specific) For Example: (On Mac: ~/Library/Python/3.x/bin/taskcat) For Example: (On Linux: ~/.local/bin) Warning: Be sure to add the python bin dir to your $PATH Windows \u00b6 Taskcat on Windows is not supported . If you are running Windows 10 we recommend that you install Windows Subsystem for Linux (WSL) and then install taskcat inside the WSL environment using the steps above. Files you\u2019ll need to use taskcat \u00b6 Step 1: You will need to configure your boto profiles (taskcat will use you default profile if none is explictily provided) Step 2: Create a taskcat test configurations example here: taskcat.yml GitHub: PyPi: Status License:","title":"Home"},{"location":"#taskcat","text":"","title":"taskcat"},{"location":"#what-is-taskcat","text":"taskcat is a tool that tests AWS CloudFormation templates. It deploys your AWS CloudFormation template in multiple AWS Regions and generates a report with a pass/fail grade for each region. You can specify the regions and number of Availability Zones you want to include in the test, and pass in parameter values from your AWS CloudFormation template. taskcat is implemented as a Python class that you import, instantiate, and run. taskcat was developed by the AWS QuickStart team to test AWS CloudFormation templates that automatically deploy workloads on AWS. We\u2019re pleased to make the tool available to all developers who want to validate their custom AWS CloudFormation templates across AWS Regions","title":"What is taskcat?"},{"location":"#support","text":"","title":"Support"},{"location":"#installing-taskcat","text":"taskcat install via pip","title":"Installing taskcat"},{"location":"#python-requirements","text":"","title":"Python Requirements:"},{"location":"#installing-via-pip3","text":"pip3 install taskcat","title":"Installing via pip3"},{"location":"#installing-via-pip3-user","text":"(for those who want to install taskcat into their homedir) pip3 install taskcat --user Note: (the user install dir is platform specific) For Example: (On Mac: ~/Library/Python/3.x/bin/taskcat) For Example: (On Linux: ~/.local/bin) Warning: Be sure to add the python bin dir to your $PATH","title":"Installing via pip3 --user"},{"location":"#windows","text":"Taskcat on Windows is not supported . If you are running Windows 10 we recommend that you install Windows Subsystem for Linux (WSL) and then install taskcat inside the WSL environment using the steps above.","title":"Windows"},{"location":"#files-youll-need-to-use-taskcat","text":"Step 1: You will need to configure your boto profiles (taskcat will use you default profile if none is explictily provided) Step 2: Create a taskcat test configurations example here: taskcat.yml GitHub: PyPi: Status License:","title":"Files you\u2019ll need to use taskcat"}]}